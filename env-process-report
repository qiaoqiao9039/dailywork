#!/bin/sh

source /nas/reg/lib/sh/log.lib.bash

env=$1

ECHO=logecho
tty -s && ECHO=echo

if [ _"$env" = "_"  ]
then
  echo "usage: $0 [ENVIRONMENT]"
  echo
  echo example:
  echo "  env-process-report srwd38"
  exit 1
fi

echo $env | grep -q '^[0-9][0-9]$'
if  [ $?  = 0 ]
then
        env="srwd$env"
fi

header_format="%-14s %-5s %-6s %-4s %-5s %-9s %-10s %-10s %-7s %-7s %-7s %-11s %-7s\n"
  data_format="%-14s %-5s %-6s %-4s %-5s %-9s %-10s %-10s %-7s %-7s %-7s %-11s %-7s\n"

runit() 
{
        m=$1
        r=$(echo $m | sed 's/^s[a-z]\{2\}[deq][0-9]\{2,3\}\([a-z]\{3\}\)[0-9]\{3\}.*/\1/')

        if echo "$r" | grep -q '\[unknown\]'; then
                return
        fi
        if [[ $r = "hst" || $r = "lba" || $r = "scg" || $r = "jfw" || $r = "gns" || $r = "ses" || $r = "sew" || $r = "mqs" ]]; then
            return
        fi

        file=/tmp/env-process-report.$$.$m.out
        ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no $m 'rpm -qa|grep -P "zookeeper|kafka";ps -ef; if [ -L /nas/deployed ] ; then ls -la /nas/deployed; fi ; cat /proc/meminfo ; uptime ; ls -l /opt/jboss/server/default/deploy 2>/dev/null | grep stubhub ; rpm -qa | grep shape-rpm ; rpm -qa | grep ecomm-rpm'  > $file
        httpd=$(egrep "(/opt/apache/sbin/httpd|/usr/sbin/httpd)" $file | wc -l | sed -e 's/^0$/./g')
        java=$(grep  "/opt/jboss/bin/run.jar" $file | grep -v activemq | wc -l | sed -e 's/^0$/./g')
        coldfusion=$(grep /opt/coldfusionmx/bin/cfusion $file | wc -l | sed -e 's/^0$/./g')
        memcached=$(grep memcached $file | grep -v java | wc -l | sed -e 's/^0$/./g')
        activemq=$(grep activemq $file | wc -l | sed -e 's/^0$/./g')
        clam=$(grep clam $file | wc -l | sed -e 's/^0$/./g')
        splunk=$(grep splunkd $file | wc -l | sed -e 's/^0$/./g')
        puppet=$(grep puppetd $file | wc -l | sed -e 's/^0$/./g')
        deployed=$(grep 'nas.deployed.*->' $file | sed -e 's:^.*/nas/release.::')
        ecomm=$(grep 'ecomm-rpm' $file | grep -v grep | sed -e 's/.*-ecomm-rpm-\(.*\)-SNAPSHOT.*/\1/')
        shape=$(grep 'shape-rpm' $file | grep -v grep | sed -e 's/.*-shape-rpm-\(.*\)/\1/')
        memory=$(grep '^MemTotal:' $file | sed -e 's/^MemTotal: *//' | sed -e 's/ .*//')
        # 16:41:00 up 104 days, 18:53,  0 users,  load average: 7.89, 8.03, 8.01
        #uptime=$(grep 'days.*load average:' $file | sed -e 's/ days.*//' | sed -e 's/^.*up //')
        #load=$(grep 'load average:' $file | sed -e 's/^.*load average: *//' | sed -e 's/,.*//')
        gb=$(echo "2k 0$memory 1000000 / p" | dc)
        lcs_slave=$(grep "java.*lcs-slave" $file | wc -l | sed -e 's/^0$/./g')
        zookeeper=$(grep -i '^zookeeper-server' $file|grep -Pv 'java|grep')
        kafka=$(grep -i '^kafka' $file|grep -Pv 'java|grep')
        proc_kafka=$(grep -i '^kafka' $file | grep -v grep | grep -i java | wc -l | sed -e 's/^0$/./g' )
        proc_zookeeper=$(grep -i 'zookeeper' $file | grep -v grep | grep -i java | wc -l | sed -e 's/^0$/./g' )

        short_hostname="$( echo "$m" | cut -f1 -d. )"

        if grep -q "stubhub-ecomm" $file; then
            if grep -q "stubhub.*->" $file; then
                deployed="CONFLICT"
            else
                deployed=$ecomm
            fi
        fi

        if [ "$r" = "zkr" ]; then
            deployed=$zookeeper
            httpd=$proc_zookeeper
        fi

        if [ "$r" = "kfk" ]; then
            deployed=$kafka
            httpd=$proc_kafka
        fi
        # printf "$shape" > /tmp/env-process-report.$$.$m.results.out
        printf "$data_format" "$short_hostname" "$httpd" "$java" "$coldfusion" "$clam" "$activemq" "$memcached" "$lcs_slave" "$puppet" "$splunk" "$gb" "$shape" "$deployed" > /tmp/env-process-report.$$.$m.results.out
}

$ECHO "$(
  printf "$header_format" "HOST" "HTTP/App" "JBOSS" "CFN" "CLAM" "ACTIVEMQ" "MEMCACHED" "LCS-SLAVE" "PUPPET" "SPLUNK" "MEMORY" "SHAPE" "ECOMM"
)"

hosts=$(grep ${env} /nas/reg/etc/dev-qa-vhosts | sed -e 's/  */ /g' | cut -f 2 -d ' ')
for m in $hosts
do  
        runit $m &
done 
wait
for f in /tmp/env-process-report.$$.*.results.out
do
  $ECHO "$(cat $f)"
done

$ECHO "$(
  printf "$header_format" "HOST" "HTTP" "JBOSS" "CFN" "CLAM" "ACTIVEMQ" "MEMCACHED" "LCS-SLAVE" "PUPPET" "SPLUNK" "MEMORY" "SHAPE" "ECOMM"
)"

#rm /tmp/env-process-report.$$.*
